version: '3'
services:
  
  mongodb:
    image: mongo
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
    networks:
      - 295topics-fullstack-net
    volumes:
      - ./db/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - 295topics-fullstack-mongo-data:/data/db
  mongo-express:
    image: mongo-express
    container_name: mexpress
    restart: always
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${ME_CONFIG_ADMIN_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${ME_CONFIG_ADMIN_PASSWORD}
      ME_CONFIG_MONGODB_URL: ${DATABASE_URL}
      ME_CONFIG_BASICAUTH_USERNAME: mexpress
      ME_CONFIG_BASICAUTH_PASSWORD: mexpress
    links:
      - mongodb
    ports:
      - "${ME_PORT}:8081"
    networks:
      - 295topics-fullstack-net
    depends_on:
      - mongodb

  topics-api:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: topics-api
    restart: always
    environment:
      DATABASE_URL: ${DATABASE_URL}
      DATABASE_NAME: ${DATABASE_NAME}
      HOST: ${TOPICS_API_HOST}
      PORT: ${TOPICS_API_PORT}
    ports:
      - "${TOPICS_API_PORT}:${TOPICS_API_PORT}"
    networks:
      - 295topics-fullstack-net
    depends_on:
      - mongodb

  topics-front:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: topics-front
    restart: always
    environment:
      API_URI: ${TOPICS_API_URI}
    ports:
      - "${TOPICS_FRONT_PORT}:3000"
    networks:
      - 295topics-fullstack-net
    depends_on:
      - topics-api
volumes:
  295topics-fullstack-mongo-data: {}
networks:
  295topics-fullstack-net:
    external: false